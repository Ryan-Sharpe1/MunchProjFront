{"ast":null,"code":"var _jsxFileName = \"/Users/Oliver.Record/Desktop/munchkinApp/MunchProjFront/src/components/startPageComps/addPlayerModal.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\nimport '../../css/modalStyle.css';\n\nclass AddPlayerModal extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.updatePlayerNumber = e => {\n      const playerNumber = e.target.value;\n      debugger;\n\n      if (playerNumber > 4) {\n        return;\n      }\n\n      this.setState(prevState => {\n        return { ...prevState,\n          playerNumber\n        };\n      });\n    };\n\n    this.postPlayers = async () => {\n      // playerOne = document.getElementById(\"0\");\n      // playerTwo = \"\"\n      // playerThree = \"\"\n      // playerFour = \"\"\n      // e.preventDefault();\n      // for (let i =0; i<= this.state.playerNumber;i++){\n      console.log(\"running post func\");\n      await fetch('http://localhost:4000/post', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"PlayerName\": \"TESTyTESTY123\"\n        })\n      }); // }\n    };\n\n    this.state = {\n      showModal: this.props.showModal,\n      title: this.props.title,\n      playerNumber: 0\n    };\n\n    this.close = () => {\n      this.setState({\n        showModal: this.props.showModal\n      });\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      showModal: nextProps.showModal\n    });\n  }\n\n  render() {\n    var playerInputs = [];\n\n    for (let i = 0; i < this.state.playerNumber; i++) {\n      playerInputs.push( /*#__PURE__*/React.createElement(\"input\", {\n        key: i,\n        id: i,\n        className: \"spawnedInput\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 27\n        }\n      }));\n    }\n\n    ;\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showModal,\n      onHide: this.props.close ? this.props.close : this.close,\n      backdrop: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"modalHead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Name your Champions!\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Modal.Body, {\n      className: \"modalBod\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"text\", {\n      className: \"baseText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"Amount (Max 4) - \"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"playerNumber\",\n      className: \"inputNumBoxModal\",\n      type: \"number\",\n      value: this.state.playerNumber,\n      onChange: this.updatePlayerNumber,\n      min: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"my_div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, playerInputs)), /*#__PURE__*/React.createElement(Modal.Footer, {\n      className: \"modalFoot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.postPlayers,\n      className: \"modalConfirm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Confirm\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.props.close ? this.props.close : this.close,\n      className: \"modalClose\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"Close\")));\n  }\n\n}\n\nexport default AddPlayerModal;","map":{"version":3,"sources":["/Users/Oliver.Record/Desktop/munchkinApp/MunchProjFront/src/components/startPageComps/addPlayerModal.js"],"names":["React","Component","Button","Modal","AddPlayerModal","constructor","args","updatePlayerNumber","e","playerNumber","target","value","setState","prevState","postPlayers","console","log","fetch","method","headers","body","JSON","stringify","state","showModal","props","title","close","componentWillReceiveProps","nextProps","render","playerInputs","i","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Button} from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\nimport '../../css/modalStyle.css';\n\nclass AddPlayerModal extends Component {\n    constructor(...args) {\n        super(...args);\n        this.state = {\n            showModal: this.props.showModal,\n            title: this.props.title,\n            playerNumber: 0\n        };\n        this.close = () => {\n            this.setState({ showModal: this.props.showModal });\n        };\n    }\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            showModal: nextProps.showModal\n        })\n    }\n\n    updatePlayerNumber = (e) => {\n        const playerNumber = e.target.value\n        debugger \n        if(playerNumber>4){\n            return\n        }\n        this.setState((prevState) => {\n            return {\n                ...prevState,\n                playerNumber\n            }\n        })\n    }\n\n    postPlayers = async () => {\n      // playerOne = document.getElementById(\"0\");\n      // playerTwo = \"\"\n      // playerThree = \"\"\n      // playerFour = \"\"\n      // e.preventDefault();\n\n      // for (let i =0; i<= this.state.playerNumber;i++){\n        console.log(\"running post func\")\n        await fetch('http://localhost:4000/post', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ \"PlayerName\": \"TESTyTESTY123\" }),\n      });\n\n      // }\n\n    };\n  render() {\n      var playerInputs = [];\n    for (let i = 0; i< this.state.playerNumber; i++){\n        playerInputs.push(<input key={i} id={i} className=\"spawnedInput\" />)\n    };\n    return (\n      <Modal\n        show={this.state.showModal}\n        onHide={this.props.close ? this.props.close : this.close}\n        backdrop={true}\n      >\n        <br />\n        <Modal.Header>\n          <h3 className=\"modalHead\">Name your Champions!</h3>\n          <br />\n        </Modal.Header>\n        <Modal.Body className=\"modalBod\">\n          <text className=\"baseText\">Amount (Max 4) - </text>\n          <input id=\"playerNumber\" className=\"inputNumBoxModal\" type=\"number\" value={this.state.playerNumber} onChange={this.updatePlayerNumber} min=\"1\"/>\n          <div id=\"my_div\">\n          {playerInputs}\n          </div>\n        </Modal.Body>\n        <Modal.Footer className=\"modalFoot\">\n          <Button onClick={this.postPlayers} className=\"modalConfirm\">\n            Confirm\n          </Button>\n          <br></br>\n          <Button\n            onClick={this.props.close ? this.props.close : this.close}\n            className=\"modalClose\"\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\nexport default AddPlayerModal;"]},"metadata":{},"sourceType":"module"}