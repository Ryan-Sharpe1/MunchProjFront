{"ast":null,"code":"var _jsxFileName = \"/Users/Ryan.Sharpe/Documents/MunchProj/munchfront/src/addPlayerModal.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\n\nclass addPlayerModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showModal2: this.props.showModal,\n      title: this.props.title\n    };\n\n    this.close = () => {\n      this.setState({\n        showModal: this.props.showModal\n      });\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      showModal: nextProps.showModal\n    });\n  }\n\n  removeAnswer() {\n    var a_id = sessionStorage.getItem('a_id');\n    fetch(`http://localhost:4001/Answers/DelA/` + a_id, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        console.log('Answer Deleted');\n        sessionStorage.setItem('ReloadingAfterPost', true);\n        window.location.reload();\n      } else {\n        alert('Failed to delete answer');\n      }\n\n      ;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showModal2,\n      onHide: this.props.close ? this.props.close : this.close,\n      backdrop: true,\n      backdropClassName: \"backdrop-style\",\n      dialogClassName: \"modal-style\",\n      \"aria-labelledby\": \"modal-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      id: \"modal-label\",\n      className: \"overlay-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, \"Delete Confirmation\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      id: \"modal-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"This will permanently delete ALL comments relating to this answer, are you sure?\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      onClick: this.removeAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \" Confirm\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 30\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.props.close ? this.props.close : this.close,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, \" Close\")));\n  }\n\n}\n\nexport default addPlayerModal;","map":{"version":3,"sources":["/Users/Ryan.Sharpe/Documents/MunchProj/munchfront/src/addPlayerModal.js"],"names":["React","Component","Button","Modal","addPlayerModal","constructor","args","state","showModal2","props","showModal","title","close","setState","componentWillReceiveProps","nextProps","removeAnswer","a_id","sessionStorage","getItem","fetch","method","headers","then","response","status","console","log","setItem","window","location","reload","alert","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Button} from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\n\nclass addPlayerModal extends Component {\n    constructor(...args) {\n        super(...args);\n        this.state = {\n            showModal2: this.props.showModal,\n            title: this.props.title\n        };\n        this.close = () => {\n            this.setState({ showModal: this.props.showModal });\n        };\n\n    }\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            showModal: nextProps.showModal\n        })\n    }\n   \n    removeAnswer() {\n        var a_id = sessionStorage.getItem('a_id');\n        fetch(`http://localhost:4001/Answers/DelA/` + a_id, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(response => {\n                if (response.status === 200) {\n                    console.log('Answer Deleted');\n                    sessionStorage.setItem('ReloadingAfterPost',true)\n                    window.location.reload();\n                } else {\n                    alert('Failed to delete answer');\n                };\n            })\n    }\n\n    render() {\n        return (\n            <Modal\n                show={this.state.showModal2}\n                onHide={this.props.close ? this.props.close : this.close}\n                backdrop={true}\n                backdropClassName=\"backdrop-style\"\n                dialogClassName=\"modal-style\"\n                aria-labelledby=\"modal-label\"\n            >\n                <Modal.Header closeButton={true}>\n                    <h4 id=\"modal-label\" className=\"overlay-title\">Delete Confirmation</h4>\n                </Modal.Header>\n                <Modal.Body>\n                <h5 id=\"modal-label\">This will permanently delete ALL comments relating to this answer, are you sure?</h5>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant='danger' onClick={this.removeAnswer}> Confirm\n                    </Button><br></br>\n                    <Button variant='secondary' onClick={this.props.close ? this.props.close : this.close}> Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\nexport default addPlayerModal;"]},"metadata":{},"sourceType":"module"}