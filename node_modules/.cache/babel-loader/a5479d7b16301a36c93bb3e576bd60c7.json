{"ast":null,"code":"var _jsxFileName = \"/Users/Oliver.Record/Desktop/munchkinApp/MunchProjFront/src/pages/MunchStart.js\";\nimport React from \"react\";\nimport Game from \"./MunchGame.js\";\nimport AddPlayerModal from '../components/startPageComps/addPlayerModal';\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Button, Icon } from \"semantic-ui-react\";\nimport \"../css/munchStart.css\";\nimport \"../css/munchGame.css\";\nexport default class Start extends React.Component {\n  constructor() {\n    super();\n\n    this.startGame = async () => {\n      await fetch('http://localhost:4000/player/allPlayerNames').then(response => response.json()).then(data => {\n        sessionStorage.setItem('playerCount', data.length);\n\n        for (var i = 0; i < data.legth; i++) {\n          sessionStorage.setItem('player' + i, data[i]);\n        }\n      });\n      await this.setState({\n        gamePage: true\n      });\n    };\n\n    this.handleButtonTogglePlayerModal = toggle => {\n      this.setState({\n        showModal: toggle\n      });\n    };\n\n    this.state = {\n      //this.state represent the rendered values, i.e. what’s currently on the screen\n      gamePage: false,\n      playerCount: \"\"\n    };\n  }\n\n  render() {\n    if (this.state.gamePage === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Game, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"script\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"link\", {\n        href: \"https://fonts.googleapis.com/css?family=Almendra SC\",\n        rel: \"stylesheet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"body\", {\n        className: \"frontBackground\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"mainTitle glowpulsed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, \"Munchkin\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"playersButt\",\n        onClick: () => this.handleButtonTogglePlayerModal(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button.Content, {\n        visible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, \"Amount of Players\")), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        animated: true,\n        className: \"startButt\",\n        onClick: this.startGame,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button.Content, {\n        visible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, \"Start Game\"), /*#__PURE__*/React.createElement(Button.Content, {\n        hidden: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"bomb\",\n        className: \"icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"levelButt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"buttInput\",\n        type: \"number\",\n        placeholder: \"Level to Win\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(AddPlayerModal, {\n        title: \"Player Names\",\n        showModal: this.state.showModal,\n        close: () => this.handleButtonTogglePlayerModal(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/Oliver.Record/Desktop/munchkinApp/MunchProjFront/src/pages/MunchStart.js"],"names":["React","Game","AddPlayerModal","Button","Icon","Start","Component","constructor","startGame","fetch","then","response","json","data","sessionStorage","setItem","length","i","legth","setState","gamePage","handleButtonTogglePlayerModal","toggle","showModal","state","playerCount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Game from \"./MunchGame.js\";\nimport AddPlayerModal from '../components/startPageComps/addPlayerModal';\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Button, Icon } from \"semantic-ui-react\";\nimport \"../css/munchStart.css\";\nimport \"../css/munchGame.css\";\n\nexport default class Start extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      //this.state represent the rendered values, i.e. what’s currently on the screen\n      gamePage: false,\n      playerCount:\"\"\n    };\n  }\n\n  startGame = async () => {\n    \n    await fetch('http://localhost:4000/player/allPlayerNames')\n    .then((response) => response.json())\n     .then((data) => {\n       sessionStorage.setItem('playerCount',data.length)\n       for(var i=0; i<data.legth;i++){\n         sessionStorage.setItem('player'+ i, data[i])\n       }\n     })\n    await this.setState({\n      gamePage:true,\n    })\n  }\n\n  handleButtonTogglePlayerModal = (toggle) => {\n\n    this.setState({\n        showModal: toggle\n    });\n}\n\n  render() {\n\n    if (this.state.gamePage === true) {\n      return (\n        <div className = \"container\">\n          <Game />\n        </div>\n      );\n    } \n    \n    else {\n      return (\n        <div className = \"container\">\n          <script>\n            <link\n              href = \"https://fonts.googleapis.com/css?family=Almendra SC\"\n              rel = \"stylesheet\"\n            ></link>\n          </script>\n          <body className = \"frontBackground\">\n            <h1 className = \"mainTitle glowpulsed\">Munchkin</h1>\n            <Button className = \"playersButt\" onClick={() => this.handleButtonTogglePlayerModal(true)}>\n                <Button.Content visible>Amount of Players</Button.Content>\n            </Button>\n            <div>\n              <Button animated className = \"startButt\" onClick={this.startGame}>\n                <Button.Content visible>Start Game</Button.Content>\n                <Button.Content hidden>\n                  <Icon name=\"bomb\" className = \"icon\" />\n                </Button.Content>\n              </Button>\n            </div>\n            <div className = \"levelButt\">\n              <input className = \"buttInput\" type = \"number\" placeholder = \"Level to Win\"></input>\n            </div>\n          </body>\n          <AddPlayerModal title = {\"Player Names\"} showModal = {this.state.showModal} close = {() => this.handleButtonTogglePlayerModal(false)}/>\n        </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}