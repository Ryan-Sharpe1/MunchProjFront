{"ast":null,"code":"var _jsxFileName = \"/Users/Ryan.Sharpe/Documents/MunchProj/munchfront/src/components/startPageComps/addPlayerModal.js\";\nimport React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"../../css/modalStyle.css\";\n\nclass AddPlayerModal extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.updatePlayerNumber = e => {\n      const playerNumber = e.target.value;\n      debugger;\n\n      if (playerNumber > 4) {\n        return;\n      }\n\n      this.setState(prevState => {\n        return { ...prevState,\n          playerNumber\n        };\n      });\n    };\n\n    this.postPlayers = async () => {\n      for (let i = 0; i < this.state.playerNumber; i++) {\n        var player = document.getElementById(i).value;\n        await fetch(\"http://localhost:4000/post\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            PlayerName: player\n          })\n        });\n      }\n\n      this.props.close ? this.props.close : this.close;\n    };\n\n    this.state = {\n      showModal: this.props.showModal,\n      title: this.props.title,\n      playerNumber: 0\n    };\n\n    this.close = () => {\n      this.setState({\n        showModal: this.props.showModal\n      });\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      showModal: nextProps.showModal\n    });\n  }\n\n  render() {\n    var playerInputs = [];\n\n    for (let i = 0; i < this.state.playerNumber; i++) {\n      playerInputs.push( /*#__PURE__*/React.createElement(\"input\", {\n        key: i,\n        id: i,\n        className: \"spawnedInput\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showModal,\n      onHide: this.props.close ? this.props.close : this.close,\n      backdrop: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"modalHead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, \"Name your Champions!\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Modal.Body, {\n      className: \"modalBod\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"text\", {\n      className: \"baseText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"Amount (Max 4) - \"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"playerNumber\",\n      className: \"inputNumBoxModal\",\n      type: \"number\",\n      value: this.state.playerNumber,\n      onChange: this.updatePlayerNumber,\n      min: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"my_div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, playerInputs)), /*#__PURE__*/React.createElement(Modal.Footer, {\n      className: \"modalFoot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.postPlayers,\n      className: \"modalConfirm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Confirm\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.props.close ? this.props.close : this.close,\n      className: \"modalClose\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"Close\")));\n  }\n\n}\n\nexport default AddPlayerModal;","map":{"version":3,"sources":["/Users/Ryan.Sharpe/Documents/MunchProj/munchfront/src/components/startPageComps/addPlayerModal.js"],"names":["React","Component","Button","Modal","AddPlayerModal","constructor","args","updatePlayerNumber","e","playerNumber","target","value","setState","prevState","postPlayers","i","state","player","document","getElementById","fetch","method","headers","body","JSON","stringify","PlayerName","props","close","showModal","title","componentWillReceiveProps","nextProps","render","playerInputs","push"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"../../css/modalStyle.css\";\n\nclass AddPlayerModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showModal: this.props.showModal,\n      title: this.props.title,\n      playerNumber: 0,\n    };\n    this.close = () => {\n      this.setState({ showModal: this.props.showModal });\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      showModal: nextProps.showModal,\n    });\n  }\n\n  updatePlayerNumber = (e) => {\n    const playerNumber = e.target.value;\n    debugger;\n    if (playerNumber > 4) {\n      return;\n    }\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        playerNumber,\n      };\n    });\n  };\n\n  postPlayers = async () => {\n    for (let i = 0; i < this.state.playerNumber; i++) {\n      var player = document.getElementById(i).value;\n      await fetch(\"http://localhost:4000/post\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ PlayerName: player }),\n      });\n    }\n    this.props.close ? this.props.close : this.close\n  };\n\n  render() {\n    var playerInputs = [];\n    for (let i = 0; i < this.state.playerNumber; i++) {\n      playerInputs.push(<input key={i} id={i} className=\"spawnedInput\" />);\n    }\n    return (\n      <Modal\n        show={this.state.showModal}\n        onHide={this.props.close ? this.props.close : this.close}\n        backdrop={true}\n      >\n        <br />\n        <Modal.Header>\n          <h3 className=\"modalHead\">Name your Champions!</h3>\n          <br />\n        </Modal.Header>\n        <Modal.Body className=\"modalBod\">\n          <text className=\"baseText\">Amount (Max 4) - </text>\n          <input\n            id=\"playerNumber\"\n            className=\"inputNumBoxModal\"\n            type=\"number\"\n            value={this.state.playerNumber}\n            onChange={this.updatePlayerNumber}\n            min=\"1\"\n          />\n          <div id=\"my_div\">{playerInputs}</div>\n        </Modal.Body>\n        <Modal.Footer className=\"modalFoot\">\n          <Button onClick={this.postPlayers} className=\"modalConfirm\">\n            Confirm\n          </Button>\n          <br></br>\n          <Button\n            onClick={this.props.close ? this.props.close : this.close}\n            className=\"modalClose\"\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\nexport default AddPlayerModal;\n"]},"metadata":{},"sourceType":"module"}